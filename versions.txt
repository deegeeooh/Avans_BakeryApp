
[0.23] 17/01/2022
migrated to using ConsoleLibrary.dll
(removed IO,Prefs,JSON,Box,Table, WINDLL classes)

fixes:
using of dummy bool for Activator calls
parse error for stock int in Product
wrong constructor call when creating new file for Product

[0.22] 03/01/2022

Added:
ConstructSearchString() method to data classes (using virtual/override to Recordmanager)
display of searchstring via Prefs.PrintBoundaries() and refactored all calls to it (note to self: use an interface next time :P)

fixes:
Main.BuildZoekString() not handling backspace correctly
Added field divider to searchstring

cleanup:
Scripts > script folder
Box.DrawWindows()
Prepped moving generic console functionality to ConsoleLibrary.dll later


[0.21] 17/12/2021

Class Box for creating and displaying boxes on screen
Class Table for creating table objects consisting of variable columns (boxes)
Added console window properties to disable resizing
Cleaning up/refactoring

Refactored and cleaned up every display method to accomodate using the new methods
Refactored Color > Prefs
moved Jason handler


[0.20] 02/12

Implemented a configurable Generic data class;
-Accepts fieldnames and fieldproperties as an array
-Inherits from RecordManager

Added several masterdata menu options using GenericDataClass

HandleRecords(): Improved search with selection of results in separate list


[0.19] 27/11
 
-Rewrote Browserecords to HandleRecords which now uses generic lists constrained to Record Manager
-Record manager now handles ID and Description field for every data class


[0.18] 15/11

Address now has flexible constructors so the order in which its field blocks:

1. Name and ID
2. Address fields

the parents can now control the order in which the data is edited and displayed, 
while still using the same inheritance order:

Recordmanager : Address : Parent

- First Recordmanager properties,
- then Address name and ID gereric properties 
- the the Parent specific properties
- and finally the Address address field properties.

Customer class has been refactored to use this, TODO Person

[0.17] 15/11

Customer class : Address class : RecordManager implemented

added 
- Implemented locking for all printing and cursor manipulation methods for event handler 
	(to prevent screwing up the console window layout)
- CTRL-C event handler 
- Debug toggle for runtime debug methods 
	(these will act while compiled with debug configuration attribute, as opposed and parallel 
	to Debugger.IsAttached which is only true when debugging in VS)

todo: 
- hook up Person and Product to Address
- change order of calls to parent classes for desired input and display flow 
- create reference field to Customer to fill into Person class list (place holder text field Represetative atm)

[0.15] 14/11

- Added semi generic (workaround knowledgegap) Main.BrowseRecords method which serves as a generic hub for all classes 
- implemented inheritance for employee from Person including all functionality 
- Structured data classes with 3 constructors: create, display and edit which all can be called from BrowseRecords
- Added RecordManager super class for all other classes which handles stuff using generic methods;
- Added Product class 

1. static record counter / setting RecordCounter property for all classes
2. record activation/deletion
3. Mutations

[0.11] 10/11

- working eventhandler for system messages
- completely reworked color implementation, global color changes per text type
- generics implemented for  JSON routines
- refactored a lot to places where it belongs
- cmd window optimisations

[0.1] 04/11

Basic clas implementation

- Person
- Employee
- Customer
- Product 
JSON as file system


